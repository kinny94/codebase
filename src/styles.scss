/* You can add global styles to this file, and also import other style files */
// @import "~@angular/material/prebuilt-themes/indigo-pink.css";
@import '~@angular/material/theming';
@import './themes/default-theme.scss';
@import './themes/amber-theme.scss';
@import './themes/blue-theme.scss';
@import './themes/dark-theme.scss';
@import './themes/amber-theme.scss';
@import './themes/green-theme.scss';
@import './themes/purple-theme.scss';
@import './themes/red-theme.scss';
@import './themes/yellow-theme.scss';
@import './themes/card-theme.scss';

@include mat-core();  

.default-theme {
  @include angular-material-theme($default-theme);
  @include card-theme($default-theme);
}

.dark-theme {
  @include angular-material-theme($dark-theme);
  @include card-theme($dark-theme);
  $heart: #c62828;
}

.red-theme {
  @include angular-material-theme($red-theme);
  @include card-theme($red-theme);
  $heart: #c62828;
}

.amber-theme {
  @include angular-material-theme($amber-theme);
  @include card-theme($amber-theme);
  $heart: #c62828;
}

.green-theme {
  @include angular-material-theme($green-theme);
  @include card-theme($green-theme);
  $heart: #c62828;
}

.blue-theme {
  @include angular-material-theme($blue-theme);
  @include card-theme($blue-theme);
  $heart: #c62828;
}

.purple-theme {
  @include angular-material-theme($purple-theme);
  @include card-theme($purple-theme);
  $heart: #c62828;
}

.yellow-theme {
  @include angular-material-theme($yellow-theme);
  @include card-theme($yellow-theme);
  $heart: #c62828;
}


@mixin theme-color-grabber($theme) {
  // Parse the theme and create variables for each color in the pallete
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  // Create theme specfic styles
}

body, html{
  margin: 0px;
  height: 100%;
  width: 100%;
}

p, h1, h2, h3, h4, h5, h6, button, span{
  font-family: 'Montserrat', sans-serif;
  text-align: justify;
}

a{
  text-decoration: none;
  color: white;
}

.full__width {
  margin-top: 3%;
  width: 100%;
}

.code__width {
  width: 100%;
}

.list_width{
  width: 100%;
}

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

$min_width: 320px;
$max_width: 1200px;
$min_font: 12px;
$max_font: 24px;

html {
  @include fluid-type($min_width, $max_width, $min_font, $max_font);
}

$mod_1: 1.2; // mobile
$mod_2: 1.5; // desktop

h1 {  
  font-size: $mod_1*$mod_1*$mod_1*$mod_1 *1rem; 
  @include fluid-type($min_width, $max_width, $mod_1*$mod_1*$mod_1 *$min_font, $mod_2*$mod_2*$mod_2 *$min_font);
}
h2 {  
  font-size: $mod_1*$mod_1*$mod_1 *1rem; 
  @include fluid-type($min_width, $max_width, $mod_1*$mod_1*$mod_1 *$min_font, $mod_2*$mod_2*$mod_2 *$min_font);
}
h3 { 
  font-size: $mod_1*$mod_1 *1rem;
  @include fluid-type($min_width, $max_width, $mod_1*$mod_1 *$min_font, $mod_2*$mod_2 *$min_font);
}

p {
  font-size: 16px;
}
